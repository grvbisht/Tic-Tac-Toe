package tictactoe;
import java.util.*;

public class Main {
    public static boolean takenOrNot(int a,int b, StringBuffer input) {
        if (input.charAt(3 * (a - 1) + (b - 1)) == ' ') return false;

        return true;
    }

    public static void main(String[] args) {

        String input ="         ";
       Scanner sc = new Scanner(System.in);
        StringBuffer sb = new StringBuffer();
        sb.append(input);
        display(sb);
        int turn = 1;
        while(true) {

            System.out.println();
            while (true) {
                System.out.println("Enter the coordinates:");
                try {

                    int a = sc.nextInt();
                    int b = sc.nextInt();
                    if (a < 1 || a > 3 || b < 1 || b > 3) {
                        System.out.println("Coordinates should be from 1 to 3");
                        continue;
                    }
                    boolean ok = takenOrNot(a, b, sb);
                    if (ok) {
                        System.out.println("This cell is occupied! Choose another one!");
                        continue;

                    }
                 if (turn == 1) {
                     sb.replace(3 * (a - 1) + (b - 1), 3 * (a - 1) + (b), "X");

                 } else {
                     sb.replace(3 * (a - 1) + (b - 1), 3 * (a - 1) + (b), "O");
                 }
                    turn = turn * -1;

                    display(sb);
                    break;
                } catch (InputMismatchException e) {
                    System.out.println("You should enter numbers!");
                }
            }

      String result = checkStatus(sb);
            if (result.equals("Game not finished")) {
                continue;
            }
            System.out.println(result);
            break;
        }


    }
    public static int Count(StringBuffer input, char c) {
        int count = 0;
        for (int i = 0;i < 9; i++) {
            if ( input.charAt(i) == c) {
                count++;
            }
        }
        return count;
    }
    public static boolean checkWinner(char c, StringBuffer input) {

        //row
        for (int i = 0 ;i < 9;i += 3) {
            if (input.charAt(i) == c && input.charAt(i + 1) == c && input.charAt(i + 2) == c) {
                return true;
            }
        }
        //col
        for (int i = 0 ;i < 3; i++) {
            if (input.charAt(i) == c && input.charAt(i+3) == c && input.charAt(i+6) == c) {
                return true;
            }
        }
        //diagonal 1
        if (input.charAt(0) == c && input.charAt(4) == c && input.charAt(8) == c) {
            return true;
        }

        //diagonal 2
        if (input.charAt(2) == c && input.charAt(4) == c && input.charAt(6) == c) {
            return true;
        }
        return false;
    }
    public static boolean checkEmpty(StringBuffer input) {
        int count_x = Count(input, 'X');
        int count_o = Count(input, 'O');

        if (count_x + count_o == 9)return false;

        return true;
    }
    public static boolean checkInvalid(StringBuffer input) {
      int count_x = Count(input, 'X');
      int count_o = Count(input, 'O');

      if ( Math.abs(count_o - count_x) > 1) return true;

      return false;
    }
    public static String checkStatus(StringBuffer input) {


        boolean c = checkInvalid(input);
        if (c) {
            System.out.println("Impossible");
        } else {
            boolean a = checkWinner('X', input);
            boolean b = checkWinner('O', input);

            if (a && b) {
                System.out.println("Impossible");
            } else if (a) {
                return "X wins";
            } else if (b) {
                return "O wins";
            } else {
                boolean d = checkEmpty(input);
                if (d) {
                    return "Game not finished";
                } else {
                    return "Draw";
                }

            }
        }
        return "";
    }
   public static void display(StringBuffer input) {
        int count = 0;
        for(int i = 0;i < 9;i++) {
            System.out.print("-");
        }
        System.out.println();
        for (int i = 0;i < 3 ;i++) {
            for (int j = 0 ;j < 5 ;j++) {
                if (j == 0 || j == 4) {
                    System.out.print("|");
                } else {
                    System.out.print(input.charAt(count++));
                }
                System.out.print(" ");
            }
            System.out.println();

        }
       for(int i = 0;i < 9;i++) {
           System.out.print("-");
       }
    }
}
